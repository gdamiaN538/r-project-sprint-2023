{
  "hash": "6adde7a842228dc9da10168ae7b46752",
  "result": {
    "markdown": "---\ntitle: Tweak printCoefmat() - better Round()ing / Zapping Zeros\ndescription: \"In rare cases, the rounding, e.g. of the 'Std. Error'. column in\n              `printCoefmat()` is undesirably rounding too much and then\n\t\t\t  depicting inaccurate values. This is from the recent R-devel mailing\n\t\t\t  list thread starting at\n\t\t\t  <https://stat.ethz.ch/pipermail/r-help/2023-July/477688.html>\"\nauthor: Martin Maechler\noutput: html_document\ncategories: [I/O, Wishlist] # from https://github.com/r-devel/r-project-sprint-2023/labels\ncomments:\n  giscus: \n    repo: \"r-devel/r-project-sprint-2023\"\n    repo-id: \"R_kgDOIhAibA\"\n    category: \"Proposals\"\n    category-id: \"DIC_kwDOIhAibM4CW3GY\"\n    mapping: \"title\"\n    reactions-enabled: true\n    loading: lazy\n---\n\n```{=html}\n<!-- \nThis template is based on https://contributor.r-project.org/r-project-sprint-2023/projects/quartz-alpha-mask/.\nThe sections are provided as a guide and may not be appropriate to your proposal, feel free to skip or change sections.\n\nPlease label any R code chunks, especially those producing images.\n-->\n```\n\n\n## Background\n\nPrinting of e.g.  `lm()` results; but also `glm()`, `anova()`, etc; not just\npackage `{stats}` but used by other packages as well, e.g., `lme4`.\n\n## Problem statement\n\nSlightly modified from Shu Fai Cheung's example on the R-devel mailing list:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nn <- 1000\nx1 <- rnorm(n)\nx2 <- rnorm(n)\ny <- 0.000754 + .5 * x1 + .6 * x2 + .036*rnorm(n)\ndat <- data.frame(x1, x2, y)\nfm <- lm(y ~ x1 + x2, dat)\n##    ---\nsfm <- summary(fm)\nprint(sfm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x1 + x2, data = dat)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.102097 -0.022598 -0.001331  0.023538  0.121632 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 3.761e-07  1.115e-03     0.0        1    \nx1          4.992e-01  1.128e-03   442.4   <2e-16 ***\nx2          6.010e-01  1.108e-03   542.3   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03524 on 997 degrees of freedom\nMultiple R-squared:  0.9981,\tAdjusted R-squared:  0.9981 \nF-statistic: 2.677e+05 on 2 and 997 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\nThe standard print is fine, but we would like the intercept to be \"zapped to zero\". So we try `zap.ind = 1` (which is passed to `printCoefmat` by `print.summary.lm`):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(sfm, zap.ind = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x1 + x2, data = dat)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.102097 -0.022598 -0.001331  0.023538  0.121632 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 0.000000   0.001115     0.0        1    \nx1          0.499200   0.001128   442.4   <2e-16 ***\nx2          0.601000   0.001108   542.3   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03524 on 997 degrees of freedom\nMultiple R-squared:  0.9981,\tAdjusted R-squared:  0.9981 \nF-statistic: 2.677e+05 on 2 and 997 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\nHere, we'd rather like to see correctly rounded coefficients\n```\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 0.000000   0.001115     0.0        1    \nx1          0.499263   0.001128   442.4   <2e-16 ***\nx2          0.600990   0.001108   542.3   <2e-16 ***\n```\n\n\n## Proposed solution\n\nImprove `printCoefmat()`.\n\nThe use of `zapsmall()` there, can round too much in these cases.\n\nOne option is to extend the meaning of the `zap.ind` argument and allow\n*negative* indices to mean that the zapping should *not* be done with\n`zapsmall()` but with an alternative function (to be defined inside `printCoefmat()`):\n\n::: {.cell}\n\n```{.r .cell-code}\nzapOnlysmall <- function(x, dig) {\n    x[abs(x) <= 10^-dig] <- 0\n    x\n}\n```\n:::\n\n\nI had tried the following patch\n\n```r\n--- anova.R\t(revision 84998)\n+++ anova.R\t(working copy)\n@@ -105,7 +105,13 @@\n \n     ok <- !(ina <- is.na(xm))\n     ## zap before deciding any formats\n-    for (i in zap.ind) xm[, i] <- zapsmall(xm[, i], digits)\n+    zapOnlysmall <- function(x, dig) { x[abs(x) <= 10^-dig] <- 0 ; x }\n+    for (i in zap.ind) { ai <- abs(i) # i < 0 [zapOnly..]  vs  i > 0 [zapsmall]:\n+        xm[, ai] <- (if(i < 0) zapOnlysmall else zapsmall)(xm[, ai], digits)\n+        ## problem: if one of these is a cs.ind (below) and is of larger order of magn., it is\n+        ## -------  rounded too much here --> shows trailing 00 afterwards.\n+\t## ==> TODO: detect and *fix* rather than needing negative zap.ind for zapOnlysmall\n+    }\n```\n\nwhich \"solved\" the problem, but actually also changes other examples\n(not shown here) where a change is *not* necessary.\n\nAlso, see my \"TODO\" above, I think we could try to make this automatic, so\nthe  `zap.ind = 1` example above would just do \"the right thing\".\n\n\n## Testing\n\nThis is not yet a strict test,\nbut code you can/should use this code to get a broader picture.\nNote that this produces a few _pages_ of R console output :\n\n```r\ncf <- coef(sfm)\n\nfor(dig in c(3:5, 7, 10)) {\n    cat(\"\\ndigits = \", dig,\":\\n================\\n\")\n    for(f in 10^c(-6, -3:3, 6, 9)) {\n        cat(\"cf[,1:2] := cf0[,1:2] * f, f=\", formatC(f),\":\\n\")\n        fcf <- cf; fcf[,1:2] <- f*cf[,1:2]\n        printCoefmat(fcf, signif.legend=FALSE, digits=dig) # using e-07 for intercept --> everything in sci.format\n        cat(\" ... and with zap.ind = 1:\\n\")\n        printCoefmat(fcf, signif.legend=FALSE, digits=dig, zap.ind = 1)\n        cat(\"-------------------------\\n\\n\")\n    }\n}\n```\n\n## Project requirements\n\nAlmost none.  Some understanding about floating point arithmetic, notably rounding.\n\n## Project outcomes\n\nA patch to the R source.  Code changes only in the first file (`anova.R`)\nbut a really useful patch also updates the documentation (`*.Rd`) notably\nadding an example there.\n\nAs I have seen (with my own first fix), that it may change output of other\nexamples, and for some of these, the `tests/Examples/<pkg>-Ex.Rout.save`\nfiles also need patching ( `tests/Examples/stats-Ex.Rout.save` will need an\nupdate in any case *if* we modify/add examples on the help page). Files to change:\n\n```sh\ndoc/NEWS.Rd\nsrc/library/stats/R/anova.R\nsrc/library/stats/man/printCoefmat.Rd\ntests/Examples/{stats,graphics,datasets}-Ex.Rout.save\n```\n\n\n## Reactions and comments\n\n\n```{=html}\n<!-- \nPlease leave the Reactions and comments section\n- a Giscus comment box will be automatically added here \n-->\n```\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}